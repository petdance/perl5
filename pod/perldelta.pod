=encoding utf8

=head1 NAME

[ this is a template for a new perldelta file.  Any text flagged as XXX needs
to be processed before release. ]

perldelta - what is new for perl v5.25.9

=head1 DESCRIPTION

This document describes differences between the 5.25.8 release and the 5.25.9
release.

If you are upgrading from an earlier release such as 5.25.7, first read
L<perl5258delta>, which describes differences between 5.25.7 and 5.25.8.

=head1 Notice

XXX Any important notices here

=head1 Core Enhancements

XXX New core language features go here.  Summarize user-visible core language
enhancements.  Particularly prominent performance optimisations could go
here, but most should go in the L</Performance Enhancements> section.

[ List each enhancement as a =head2 entry ]

=head1 Security

XXX Any security-related notices go here.  In particular, any security
vulnerabilities closed should be noted here rather than in the
L</Selected Bug Fixes> section.

[ List each security issue as a =head2 entry ]

=head1 Incompatible Changes

XXX For a release on a stable branch, this section aspires to be:

    There are no changes intentionally incompatible with 5.XXX.XXX
    If any exist, they are bugs, and we request that you submit a
    report.  See L</Reporting Bugs> below.

[ List each incompatible change as a =head2 entry ]

=head1 Deprecations

=head2 String delimiters that aren't stand-alone graphemes are now
deprecated

In order for Perl to eventually allow string delimiters to be Unicode
grapheme clusters (which look like a single character, but may be
a sequence of several ones), we have to stop allowing a single char
delimiter that isn't a grapheme by itself.  These are unlikely to exist
in actual code, as they would typically display as attached to the
character in front of them.

=head2 Module removals

XXX Remove this section if inapplicable.

The following modules will be removed from the core distribution in a
future release, and will at that time need to be installed from CPAN.
Distributions on CPAN which require these modules will need to list them as
prerequisites.

The core versions of these modules will now issue C<"deprecated">-category
warnings to alert you to this fact.  To silence these deprecation warnings,
install the modules in question from CPAN.

Note that these are (with rare exceptions) fine modules that you are encouraged
to continue to use.  Their disinclusion from core primarily hinges on their
necessity to bootstrapping a fully functional, CPAN-capable Perl installation,
not usually on concerns over their design.

=over

=item XXX

XXX Note that deprecated modules should be listed here even if they are listed
as an updated module in the L</Modules and Pragmata> section.

=back

[ List each other deprecation as a =head2 entry ]

=head1 Performance Enhancements

XXX Changes which enhance performance without changing behaviour go here.
There may well be none in a stable release.

[ List each enhancement as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Modules and Pragmata

XXX All changes to installed files in F<cpan/>, F<dist/>, F<ext/> and F<lib/>
go here.  If Module::CoreList is updated, generate an initial draft of the
following sections using F<Porting/corelist-perldelta.pl>.  A paragraph summary
for important changes should then be added by hand.  In an ideal world,
dual-life modules would have a F<Changes> file that could be cribbed.

[ Within each section, list entries as a =item entry ]

=head2 New Modules and Pragmata

=over 4

=item *

XXX

=back

=head2 Updated Modules and Pragmata

=over 4

=item *

L<XXX> has been upgraded from version A.xx to B.yy.

=item *

L<B::Xref> has been upgraded from version 1.05 to 1.06.

=item *

L<Compress::Raw::Bzip2> has been upgraded from version 2.069 to 2.070.

=item *

L<Compress::Raw::Zlib> has been upgraded from version 2.069 to 2.070.

=item *

L<DB_File> has been upgraded from version 1.838 to 1.840.

=item *

L<Devel::SelfStubber> has been upgraded from version 1.05 to 1.06.

=item *

L<diagnostics> has been upgraded from version 1.35 to 1.36.

=item *

L<DynaLoader> has been upgraded from version 1.40 to 1.41.

=item *

L<Errno> has been upgraded from version 1.27 to 1.28.

=item *

L<ExtUtils::Embed> has been upgraded from version 1.33 to 1.34.

=item *

L<I18N::LangTags> has been upgraded from version 0.41 to 0.42.

=item *

L<lib> has been upgraded from version 0.63 to 0.64.

=item *

L<Module::CoreList> has been upgraded from version 5.20161220 to 5.20170120.

=item *

L<OS2::Process> has been upgraded from version 1.11 to 1.12.

=item *

L<perl5db.pl> has been upgraded from version 1.50 to 1.51.

=item *

L<Storable> has been upgraded from version 2.59 to 2.61.

=item *

L<Symbol> has been upgraded from version 1.07 to 1.08.

=item *

L<Term::ReadLine> has been upgraded from version 1.15 to 1.16.

=item *

L<Test> has been upgraded from version 1.29 to 1.30.

=item *

L<threads::shared> has been upgraded from version 1.52 to 1.53.

=item *

L<Unicode::UCD> has been upgraded from version 0.67 to 0.68.

=item *

L<VMS::DCLsym> has been upgraded from version 1.07 to 1.08.

=item *

L<XSLoader> has been upgraded from version 0.24 to 0.26.

=back

=head2 Removed Modules and Pragmata

=over 4

=item *

XXX

=back

=head1 Documentation

XXX Changes to files in F<pod/> go here.  Consider grouping entries by
file and be sure to link to the appropriate page, e.g. L<perlfunc>.

=head2 New Documentation

XXX Changes which create B<new> files in F<pod/> go here.

=head3 L<XXX>

XXX Description of the purpose of the new file here

=head2 Changes to Existing Documentation

XXX Changes which significantly change existing files in F<pod/> go here.
However, any changes to F<pod/perldiag.pod> should go in the L</Diagnostics>
section.

=head3 L<XXX>

=over 4

=item *

XXX Description of the change here

=back

=head1 Diagnostics

The following additions or changes have been made to diagnostic output,
including warnings and fatal error messages.  For the complete list of
diagnostic messages, see L<perldiag>.

XXX New or changed warnings emitted by the core's C<C> code go here.  Also
include any changes in L<perldiag> that reconcile it to the C<C> code.

=head2 New Diagnostics

XXX Newly added diagnostic messages go under here, separated into New Errors
and New Warnings

=head3 New Errors

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head3 New Warnings

=over 4

=item *

XXX L<message|perldiag/"message">

=back

=head2 Changes to Existing Diagnostics

XXX Changes (i.e. rewording) of diagnostic messages go here

=over 4

=item *

XXX Describe change here

=back

=head1 Utility Changes

XXX Changes to installed programs such as F<perlbug> and F<xsubpp> go here.
Most of these are built within the directory F<utils>.

[ List utility changes as a =head2 entry for each utility and =item
entries for each change
Use L<XXX> with program names to get proper documentation linking. ]

=head2 L<XXX>

=over 4

=item *

XXX

=back

=head1 Configuration and Compilation

XXX Changes to F<Configure>, F<installperl>, F<installman>, and analogous tools
go here.  Any other changes to the Perl build process should be listed here.
However, any platform-specific changes should be listed in the
L</Platform Support> section, instead.

[ List changes as a =item entry ].

=over 4

=item *

The C<dtrace> build process has further changes:

=over

=item *

If the C<-xnolibs> is available, use that so a F<dtrace> perl can be
built within a FreeBSD jail.

=item *

On systems that build a dtrace object file (FreeBSD, Solaris and
SystemTap's dtrace emulation), copy the input objects to a separate
directory and process them there, and use those objects in the link,
since C<dtrace -G> also modifies these objects.

=item *

Add libelf to the build on FreeBSD 10.x, since dtrace adds references
to libelf symbols.

=item *

Generate a dummy dtrace_main.o if C<dtrace -G> fails to build it.  A
default build on Solaris generates probes from the unused inline
functions, while they don't on FreeBSD, which causes C<dtrace -G> to
fail.

=back

[perl #130108]

=item *

You can now disable perl's use of the PERL_HASH_SEED and
PERL_PERTURB_KEYS environment variables by configureing perl with
C<-Accflags=NO_PERL_HASH_ENV>.

=item *

You can now disable perl's use of the PERL_HASH_SEED_DEBUG environment
variable by configuring perl with
C<-Accflags=-DNO_PERL_HASH_SEED_DEBUG>.

=back

=head1 Testing

XXX Any significant changes to the testing of a freshly built perl should be
listed here.  Changes which create B<new> files in F<t/> go here as do any
large changes to the testing harness (e.g. when parallel testing was added).
Changes to existing files in F<t/> aren't worth summarizing, although the bugs
that they represent may be covered elsewhere.

[ List each test improvement as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Platform Support

XXX Any changes to platform support should be listed in the sections below.

[ Within the sections, list each platform as a =item entry with specific
changes as paragraphs below it. ]

=head2 New Platforms

XXX List any platforms that this version of perl compiles on, that previous
versions did not.  These will either be enabled by new files in the F<hints/>
directories, or new subdirectories and F<README> files at the top level of the
source tree.

=over 4

=item XXX-some-platform

XXX

=back

=head2 Discontinued Platforms

XXX List any platforms that this version of perl no longer compiles on.

=over 4

=item XXX-some-platform

XXX

=back

=head2 Platform-Specific Notes

XXX List any changes for specific platforms.  This could include configuration
and compilation changes or changes in portability/compatibility.  However,
changes within modules for platforms should generally be listed in the
L</Modules and Pragmata> section.

=over 4

=item XXX-some-platform

XXX

=back

=head1 Internal Changes

XXX Changes which affect the interface available to C<XS> code go here.  Other
significant internal changes for future core maintainers should be noted as
well.

[ List each change as a =item entry ]

=over 4

=item *

New versions of macros like C<isALPHA_utf8> and C<toLOWER_utf8>  have
been added, each with the
suffix C<_safe>, like C<isSPACE_utf8_safe>.  These take an extra
parameter, giving an upper limit of how far into the string it is safe
to read.  Using the old versions could cause attempts to read beyond the
end of the input buffer if the UTF-8 is not well-formed, and ther use
now raises a deprecation warning.  Details are at
L<perlapi/Character classification>.

=item *

Calling macros like C<isALPHA_utf8> on malformed UTF-8 have issued a
deprecation warning since Perl v5.18.  They now die.
Similarly, macros like C<toLOWER_utf8> on malformed UTF-8 now die.

=item *

Calling the functions C<utf8n_to_uvchr> and its derivatives, while
passing a string length of 0 is now asserted against in DEBUGGING
builds, and otherwise returns the Unicode REPLACEMENT CHARACTER.   If
you have nothing to decode, you shouldn't call the decode function.

=item *

The functions C<utf8n_to_uvchr> and its derivatives now return the
Unicode REPLACEMENT CHARACTER if called with UTF-8 that has the overlong
malformation, and that malformation is allowed by the input parameters.
This malformation is where the UTF-8 looks valid syntactically, but
there is a shorter sequence that yields the same code point.  This has
been forbidden since Unicode version 3.1.

=item *

The functions C<utf8n_to_uvchr> and its derivatives now accept an input
flag to allow the overflow malformation.  This malformation is when the
UTF-8 may be syntactically valid, but the code point it represents is
not capable of being represented in the word length on the platform.
What "allowed" means in this case is that the function doesn't return an
error, and advances the parse pointer to beyond the UTF-8 in question,
but it returns the Unicode REPLACEMENT CHARACTER as the value of the
code point (since the real value is not representable).

=back

=head1 Selected Bug Fixes

XXX Important bug fixes in the core language are summarized here.  Bug fixes in
files in F<ext/> and F<lib/> are best summarized in L</Modules and Pragmata>.

[ List each fix as a =item entry ]

=over 4

=item *

Under C<use utf8>, the entire Perl program is now checked that the UTF-8
is wellformed.  This resolves [perl #126310].

=item *

The range operator C<..> on strings now handles its arguments correctly when in
the scope of the L<< C<unicode_strings>|feature/"The 'unicode_strings' feature" >>
feature. The previous behaviour was sufficiently unexpected that we believe no
correct program could have made use of it.

=back

=head1 Known Problems

XXX Descriptions of platform agnostic bugs we know we can't fix go here.  Any
tests that had to be C<TODO>ed for the release would be noted here.  Unfixed
platform specific bugs also go here.

[ List each fix as a =item entry ]

=over 4

=item *

XXX

=back

=head1 Errata From Previous Releases

=over 4

=item *

XXX Add anything here that we forgot to add, or were mistaken about, in
the perldelta of a previous release.

=back

=head1 Obituary

XXX If any significant core contributor has died, we've added a short obituary
here.

=head1 Acknowledgements

XXX Generate this with:

  perl Porting/acknowledgements.pl v5.25.5..HEAD

=head1 Reporting Bugs

If you find what you think is a bug, you might check the perl bug database
at L<https://rt.perl.org/> .  There may also be information at
L<http://www.perl.org/> , the Perl Home Page.

If you believe you have an unreported bug, please run the L<perlbug> program
included with your release.  Be sure to trim your bug down to a tiny but
sufficient test case.  Your bug report, along with the output of C<perl -V>,
will be sent off to perlbug@perl.org to be analysed by the Perl porting team.

If the bug you are reporting has security implications which make it
inappropriate to send to a publicly archived mailing list, then see
L<perlsec/SECURITY VULNERABILITY CONTACT INFORMATION>
for details of how to report the issue.

=head1 SEE ALSO

The F<Changes> file for an explanation of how to view exhaustive details on
what changed.

The F<INSTALL> file for how to build Perl.

The F<README> file for general stuff.

The F<Artistic> and F<Copying> files for copyright information.

=cut
